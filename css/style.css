/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* this is the universal selector,
sometimes browsers add margins to say h1 or p,
this removes it and lets us start clean */

/* for box-sizing: i.e. width is 100px, then that 100px will include
any border or padding */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* font is usually inherited
since body is the parent,
all childs will inherit the font,
more efficient and better practice to do it here */

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
    to right bottom, 
    rgba(126, 213, 111, 0.8), 
    rgba(40, 180, 133, 0.8)
    ), 
    url('../img/hero.jpg');
  background-size: cover;
  background-position: top;
  position: relative;

  clip-path: polygon(0 0, 100% 0, 100% 80vh, 0 100%);
}

/* reference point is the first parent element which has its position set to relative */
.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.header-primary {
  color: #fff;
  text-transform: uppercase;

  /* fixes animation shakiness occurence */
  backface-visibility: hidden;
  margin-bottom: 60px;
}

.header-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /*
  animation-delay: 3s;
  animation-iteration-count: 3;
  */
}

.header-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 7  00;
  letter-spacing: 17.4px;

  animation: moveInRight 1s ease-out;
}

/* different methods for animation
can use keyframes or set transition */
/* for browser performance: only do opacity and transform */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }
  80% {
    transform: translateX(10px);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }
  80% {
    transform: translateX(-10px);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(50px);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/* link "psuedo class" */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  /* since it is inline block element,
  it is treated as if it is text,
  then we can just set textbox text align to center */
  display: inline-block;
  border-radius: 100px;
  transition: all 0.2s;
  position: relative;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
  background-color: #fff;
  color: #777;
}

/* basically treated as a child of the element,
height and width takes size of parent */
.btn::after {
  /* always need content and display for after/before */
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s;
}

.btn-white::after {
  background-color: #fff;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn-animated {
  animation: moveInBottom .5s ease-out .75s;
  animation-fill-mode: backwards;
}